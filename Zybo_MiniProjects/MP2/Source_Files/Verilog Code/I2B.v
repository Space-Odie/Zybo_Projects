// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="I2B,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.418000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=13,HLS_SYN_FF=2131,HLS_SYN_LUT=4170,HLS_VERSION=2019_2}" *)

module I2B (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_address0,
        img_ce0,
        img_q0,
        img_address1,
        img_ce1,
        img_q1,
        b_address0,
        b_ce0,
        b_we0,
        b_d0,
        zeropad_address0,
        zeropad_ce0,
        zeropad_we0,
        zeropad_d0,
        zeropad_q0,
        zeropad_address1,
        zeropad_ce1,
        zeropad_q1,
        avg_address0,
        avg_ce0,
        avg_we0,
        avg_d0,
        inv_address0,
        inv_ce0,
        inv_we0,
        inv_d0,
        sca_address0,
        sca_ce0,
        sca_we0,
        sca_d0,
        comp_img_address0,
        comp_img_ce0,
        comp_img_we0,
        comp_img_d0,
        comp_img_address1,
        comp_img_ce1,
        comp_img_we1,
        comp_img_d1,
        decom_img_address0,
        decom_img_ce0,
        decom_img_we0,
        decom_img_d0
);

parameter    ap_ST_fsm_state1 = 76'd1;
parameter    ap_ST_fsm_state2 = 76'd2;
parameter    ap_ST_fsm_state3 = 76'd4;
parameter    ap_ST_fsm_state4 = 76'd8;
parameter    ap_ST_fsm_state5 = 76'd16;
parameter    ap_ST_fsm_state6 = 76'd32;
parameter    ap_ST_fsm_state7 = 76'd64;
parameter    ap_ST_fsm_state8 = 76'd128;
parameter    ap_ST_fsm_state9 = 76'd256;
parameter    ap_ST_fsm_state10 = 76'd512;
parameter    ap_ST_fsm_state11 = 76'd1024;
parameter    ap_ST_fsm_state12 = 76'd2048;
parameter    ap_ST_fsm_state13 = 76'd4096;
parameter    ap_ST_fsm_state14 = 76'd8192;
parameter    ap_ST_fsm_state15 = 76'd16384;
parameter    ap_ST_fsm_state16 = 76'd32768;
parameter    ap_ST_fsm_state17 = 76'd65536;
parameter    ap_ST_fsm_state18 = 76'd131072;
parameter    ap_ST_fsm_state19 = 76'd262144;
parameter    ap_ST_fsm_state20 = 76'd524288;
parameter    ap_ST_fsm_state21 = 76'd1048576;
parameter    ap_ST_fsm_state22 = 76'd2097152;
parameter    ap_ST_fsm_state23 = 76'd4194304;
parameter    ap_ST_fsm_state24 = 76'd8388608;
parameter    ap_ST_fsm_state25 = 76'd16777216;
parameter    ap_ST_fsm_state26 = 76'd33554432;
parameter    ap_ST_fsm_state27 = 76'd67108864;
parameter    ap_ST_fsm_state28 = 76'd134217728;
parameter    ap_ST_fsm_state29 = 76'd268435456;
parameter    ap_ST_fsm_state30 = 76'd536870912;
parameter    ap_ST_fsm_state31 = 76'd1073741824;
parameter    ap_ST_fsm_state32 = 76'd2147483648;
parameter    ap_ST_fsm_state33 = 76'd4294967296;
parameter    ap_ST_fsm_state34 = 76'd8589934592;
parameter    ap_ST_fsm_state35 = 76'd17179869184;
parameter    ap_ST_fsm_state36 = 76'd34359738368;
parameter    ap_ST_fsm_state37 = 76'd68719476736;
parameter    ap_ST_fsm_state38 = 76'd137438953472;
parameter    ap_ST_fsm_state39 = 76'd274877906944;
parameter    ap_ST_fsm_state40 = 76'd549755813888;
parameter    ap_ST_fsm_state41 = 76'd1099511627776;
parameter    ap_ST_fsm_state42 = 76'd2199023255552;
parameter    ap_ST_fsm_state43 = 76'd4398046511104;
parameter    ap_ST_fsm_state44 = 76'd8796093022208;
parameter    ap_ST_fsm_state45 = 76'd17592186044416;
parameter    ap_ST_fsm_state46 = 76'd35184372088832;
parameter    ap_ST_fsm_state47 = 76'd70368744177664;
parameter    ap_ST_fsm_state48 = 76'd140737488355328;
parameter    ap_ST_fsm_state49 = 76'd281474976710656;
parameter    ap_ST_fsm_state50 = 76'd562949953421312;
parameter    ap_ST_fsm_state51 = 76'd1125899906842624;
parameter    ap_ST_fsm_state52 = 76'd2251799813685248;
parameter    ap_ST_fsm_state53 = 76'd4503599627370496;
parameter    ap_ST_fsm_state54 = 76'd9007199254740992;
parameter    ap_ST_fsm_state55 = 76'd18014398509481984;
parameter    ap_ST_fsm_state56 = 76'd36028797018963968;
parameter    ap_ST_fsm_state57 = 76'd72057594037927936;
parameter    ap_ST_fsm_state58 = 76'd144115188075855872;
parameter    ap_ST_fsm_state59 = 76'd288230376151711744;
parameter    ap_ST_fsm_state60 = 76'd576460752303423488;
parameter    ap_ST_fsm_state61 = 76'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 76'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 76'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 76'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 76'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 76'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 76'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 76'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 76'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 76'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 76'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 76'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 76'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 76'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 76'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 76'd37778931862957161709568;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] img_address0;
output   img_ce0;
input  [31:0] img_q0;
output  [9:0] img_address1;
output   img_ce1;
input  [31:0] img_q1;
output  [9:0] b_address0;
output   b_ce0;
output   b_we0;
output  [31:0] b_d0;
output  [9:0] zeropad_address0;
output   zeropad_ce0;
output   zeropad_we0;
output  [31:0] zeropad_d0;
input  [31:0] zeropad_q0;
output  [9:0] zeropad_address1;
output   zeropad_ce1;
input  [31:0] zeropad_q1;
output  [9:0] avg_address0;
output   avg_ce0;
output   avg_we0;
output  [31:0] avg_d0;
output  [9:0] inv_address0;
output   inv_ce0;
output   inv_we0;
output  [31:0] inv_d0;
output  [9:0] sca_address0;
output   sca_ce0;
output   sca_we0;
output  [31:0] sca_d0;
output  [10:0] comp_img_address0;
output   comp_img_ce0;
output   comp_img_we0;
output  [31:0] comp_img_d0;
output  [10:0] comp_img_address1;
output   comp_img_ce1;
output   comp_img_we1;
output  [31:0] comp_img_d1;
output  [9:0] decom_img_address0;
output   decom_img_ce0;
output   decom_img_we0;
output  [31:0] decom_img_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] img_address0;
reg img_ce0;
reg[9:0] img_address1;
reg img_ce1;
reg b_ce0;
reg b_we0;
reg[9:0] zeropad_address0;
reg zeropad_ce0;
reg zeropad_we0;
reg[31:0] zeropad_d0;
reg[9:0] zeropad_address1;
reg zeropad_ce1;
reg avg_ce0;
reg avg_we0;
reg inv_ce0;
reg inv_we0;
reg sca_ce0;
reg sca_we0;
reg comp_img_ce0;
reg comp_img_we0;
reg comp_img_ce1;
reg comp_img_we1;
reg decom_img_ce0;
reg decom_img_we0;

(* fsm_encoding = "none" *) reg   [75:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] Compressed_Image_0_address0;
reg    Compressed_Image_0_ce0;
wire   [7:0] Compressed_Image_0_q0;
wire   [9:0] Compressed_Image_1_address0;
reg    Compressed_Image_1_ce0;
wire   [1:0] Compressed_Image_1_q0;
reg   [31:0] reg_771;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [9:0] add_ln84_fu_776_p2;
reg   [9:0] add_ln84_reg_1805;
wire    ap_CS_fsm_state2;
wire   [4:0] i_fu_788_p2;
reg   [4:0] i_reg_1813;
wire   [4:0] j_fu_800_p2;
reg   [4:0] j_reg_1821;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln86_1_fu_816_p1;
reg   [63:0] zext_ln86_1_reg_1826;
wire   [0:0] icmp_ln85_fu_794_p2;
wire   [9:0] add_ln94_fu_847_p2;
reg   [9:0] add_ln94_reg_1836;
wire    ap_CS_fsm_state5;
wire   [4:0] a_fu_863_p2;
reg   [4:0] a_reg_1844;
wire   [0:0] icmp_ln96_fu_869_p2;
reg   [0:0] icmp_ln96_reg_1849;
wire   [0:0] icmp_ln94_fu_857_p2;
reg   [9:0] zeropad_addr_10_reg_1853;
reg   [9:0] zeropad_addr_11_reg_1858;
wire   [0:0] icmp_ln99_fu_886_p2;
reg   [0:0] icmp_ln99_reg_1863;
wire   [10:0] mul_ln108_fu_902_p2;
reg   [10:0] mul_ln108_reg_1867;
wire   [4:0] b_1_fu_914_p2;
reg   [4:0] b_1_reg_1875;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln102_fu_920_p2;
reg   [0:0] icmp_ln102_reg_1880;
wire   [0:0] icmp_ln95_fu_908_p2;
wire   [0:0] icmp_ln105_fu_926_p2;
reg   [0:0] icmp_ln105_reg_1884;
wire   [9:0] add_ln108_3_fu_956_p2;
reg   [9:0] add_ln108_3_reg_1893;
wire   [9:0] add_ln114_fu_996_p2;
reg   [9:0] add_ln114_reg_1898;
wire    ap_CS_fsm_state8;
wire   [9:0] add_ln114_1_fu_1002_p2;
reg   [9:0] add_ln114_1_reg_1903;
wire   [4:0] m_fu_1014_p2;
reg   [4:0] m_reg_1911;
wire   [9:0] mul_ln120_fu_1030_p2;
reg   [9:0] mul_ln120_reg_1916;
wire   [0:0] icmp_ln114_fu_1008_p2;
wire   [9:0] mul_ln120_1_fu_1040_p2;
reg   [9:0] mul_ln120_1_reg_1923;
wire   [4:0] n_fu_1052_p2;
reg   [4:0] n_reg_1933;
wire    ap_CS_fsm_state9;
wire   [9:0] zext_ln120_2_fu_1058_p1;
reg   [9:0] zext_ln120_2_reg_1938;
wire   [0:0] icmp_ln115_fu_1046_p2;
wire   [9:0] add_ln120_15_fu_1116_p2;
reg   [9:0] add_ln120_15_reg_1969;
wire   [9:0] add_ln120_16_fu_1121_p2;
reg   [9:0] add_ln120_16_reg_1974;
wire   [9:0] add_ln120_17_fu_1137_p2;
reg   [9:0] add_ln120_17_reg_1979;
wire   [9:0] add_ln120_18_fu_1143_p2;
reg   [9:0] add_ln120_18_reg_1984;
wire   [9:0] add_ln120_19_fu_1148_p2;
reg   [9:0] add_ln120_19_reg_1989;
wire   [31:0] add_ln120_2_fu_1153_p2;
reg   [31:0] add_ln120_2_reg_1994;
wire   [31:0] add_ln120_3_fu_1167_p2;
reg   [31:0] add_ln120_3_reg_2009;
reg   [31:0] zeropad_load_5_reg_2014;
wire    ap_CS_fsm_state13;
reg   [31:0] zeropad_load_6_reg_2029;
wire   [31:0] add_ln120_8_fu_1197_p2;
reg   [31:0] add_ln120_8_reg_2034;
wire    ap_CS_fsm_state14;
wire  signed [31:0] add_ln120_9_fu_1207_p2;
reg  signed [31:0] add_ln120_9_reg_2039;
wire    ap_CS_fsm_state15;
reg   [0:0] tmp_12_reg_2044;
wire   [64:0] mul_ln120_2_fu_1223_p2;
reg   [64:0] mul_ln120_2_reg_2050;
wire    ap_CS_fsm_state16;
reg   [28:0] tmp_14_reg_2055;
wire   [9:0] add_ln126_fu_1286_p2;
reg   [9:0] add_ln126_reg_2060;
wire    ap_CS_fsm_state18;
wire   [4:0] i_inv_fu_1298_p2;
reg   [4:0] i_inv_reg_2068;
wire   [4:0] j_inv_fu_1310_p2;
reg   [4:0] j_inv_reg_2076;
wire    ap_CS_fsm_state19;
wire   [63:0] zext_ln128_1_fu_1326_p1;
reg   [63:0] zext_ln128_1_reg_2081;
wire   [0:0] icmp_ln127_fu_1304_p2;
wire   [9:0] add_ln132_fu_1338_p2;
reg   [9:0] add_ln132_reg_2091;
wire    ap_CS_fsm_state21;
wire   [4:0] i_scale_fu_1350_p2;
reg   [4:0] i_scale_reg_2099;
wire   [4:0] j_scale_fu_1367_p2;
reg   [4:0] j_scale_reg_2121;
wire    ap_CS_fsm_state22;
wire   [63:0] zext_ln134_1_fu_1383_p1;
reg   [63:0] zext_ln134_1_reg_2126;
wire   [0:0] icmp_ln133_fu_1361_p2;
reg   [31:0] img_load_3_reg_2136;
wire    ap_CS_fsm_state23;
wire   [63:0] grp_fu_748_p1;
reg   [63:0] tmp_reg_2141;
wire    ap_CS_fsm_state27;
wire   [63:0] grp_fu_743_p2;
reg   [63:0] x_assign_reg_2146;
wire    ap_CS_fsm_state32;
wire   [31:0] p_Val2_6_fu_1523_p3;
reg   [31:0] p_Val2_6_reg_2151;
wire    ap_CS_fsm_state33;
wire   [9:0] add_ln141_fu_1531_p2;
reg   [9:0] add_ln141_reg_2156;
wire    ap_CS_fsm_state35;
wire   [4:0] i_cmprs_fu_1543_p2;
reg   [4:0] i_cmprs_reg_2164;
reg   [9:0] img_addr_4_reg_2169;
wire   [0:0] icmp_ln141_fu_1537_p2;
reg   [9:0] img_addr_5_reg_2174;
wire   [4:0] j_cmprs_fu_1591_p2;
reg   [4:0] j_cmprs_reg_2196;
wire    ap_CS_fsm_state36;
wire   [0:0] icmp_ln144_fu_1597_p2;
reg   [0:0] icmp_ln144_reg_2202;
wire   [0:0] icmp_ln142_fu_1585_p2;
wire   [0:0] icmp_ln144_1_fu_1603_p2;
reg   [0:0] icmp_ln144_1_reg_2206;
wire    ap_CS_fsm_state37;
wire   [9:0] p_fu_1700_p2;
reg   [9:0] p_reg_2226;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln167_fu_1694_p2;
wire   [31:0] zext_ln168_1_fu_1712_p1;
reg   [31:0] zext_ln168_1_reg_2241;
wire    ap_CS_fsm_state40;
reg   [1:0] Decomp_count_reg_2246;
wire   [1:0] z_fu_1721_p2;
reg   [1:0] z_reg_2254;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln170_fu_1716_p2;
reg   [4:0] i_0_reg_503;
reg   [9:0] phi_mul_reg_514;
reg   [4:0] j_0_reg_526;
wire   [0:0] icmp_ln84_fu_782_p2;
wire    ap_CS_fsm_state4;
reg   [4:0] a_0_reg_537;
reg   [9:0] phi_mul1_reg_548;
reg   [4:0] b1_0_reg_560;
wire    ap_CS_fsm_state7;
reg   [4:0] d_0_reg_571;
reg   [9:0] phi_mul3_reg_582;
reg   [9:0] phi_mul5_reg_594;
reg   [4:0] e_0_reg_606;
wire    ap_CS_fsm_state17;
reg   [4:0] i_inv_0_reg_618;
reg   [9:0] phi_mul7_reg_629;
reg   [4:0] j_inv_0_reg_641;
wire   [0:0] icmp_ln126_fu_1292_p2;
wire    ap_CS_fsm_state20;
reg   [4:0] i_scale_0_reg_652;
reg   [9:0] phi_mul9_reg_663;
reg   [4:0] j_scale_0_reg_675;
wire   [0:0] icmp_ln132_fu_1344_p2;
wire    ap_CS_fsm_state34;
reg   [4:0] i_cmprs_0_reg_686;
reg   [9:0] phi_mul11_reg_697;
reg   [4:0] j_cmprs_0_reg_709;
wire    ap_CS_fsm_state38;
reg   [9:0] p_0_reg_721;
reg   [1:0] z_0_reg_732;
wire    ap_CS_fsm_state76;
wire   [63:0] zext_ln94_1_fu_842_p1;
wire   [63:0] zext_ln106_fu_881_p1;
wire   [63:0] zext_ln108_1_fu_947_p1;
wire   [63:0] zext_ln100_1_fu_972_p1;
wire   [63:0] zext_ln97_1_fu_987_p1;
wire   [63:0] zext_ln108_3_fu_992_p1;
wire   [63:0] zext_ln120_3_fu_1068_p1;
wire   [63:0] zext_ln120_4_fu_1077_p1;
wire   [63:0] zext_ln120_5_fu_1086_p1;
wire   [63:0] zext_ln120_7_fu_1101_p1;
wire   [63:0] zext_ln120_8_fu_1111_p1;
wire   [63:0] zext_ln120_9_fu_1159_p1;
wire   [63:0] zext_ln120_12_fu_1163_p1;
wire   [63:0] zext_ln120_13_fu_1173_p1;
wire   [63:0] zext_ln120_14_fu_1177_p1;
wire   [63:0] zext_ln120_10_fu_1239_p1;
wire   [63:0] zext_ln144_fu_1555_p1;
wire   [63:0] zext_ln144_2_fu_1570_p1;
wire   [63:0] zext_ln147_1_fu_1619_p1;
wire   [63:0] zext_ln147_3_fu_1633_p1;
wire  signed [63:0] sext_ln152_fu_1655_p1;
wire   [0:0] icmp_ln147_fu_1638_p2;
wire   [63:0] zext_ln153_fu_1678_p1;
wire   [63:0] zext_ln168_fu_1706_p1;
wire  signed [63:0] sext_ln171_fu_1741_p1;
reg   [31:0] count_1_fu_178;
wire   [31:0] count_fu_1683_p2;
reg   [31:0] num_1_fu_182;
wire   [31:0] grp_fu_760_p2;
reg   [31:0] im_col_1_fu_186;
wire   [31:0] im_col_fu_1781_p2;
reg   [31:0] im_row_1_fu_190;
wire   [31:0] im_row_2_fu_1766_p3;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state24;
wire   [9:0] zext_ln86_fu_806_p1;
wire   [9:0] add_ln86_fu_810_p2;
wire   [24:0] tmp_9_fu_821_p4;
wire   [0:0] icmp_ln86_fu_831_p2;
wire   [9:0] add_ln106_fu_875_p2;
wire   [5:0] zext_ln94_fu_853_p1;
wire   [5:0] add_ln108_fu_892_p2;
wire  signed [5:0] mul_ln108_fu_902_p0;
wire   [4:0] add_ln108_1_fu_932_p2;
wire   [10:0] zext_ln108_fu_938_p1;
wire   [10:0] add_ln108_2_fu_942_p2;
wire   [9:0] zext_ln108_2_fu_952_p1;
wire   [9:0] zext_ln100_fu_962_p1;
wire   [9:0] add_ln100_fu_966_p2;
wire   [9:0] zext_ln97_fu_977_p1;
wire   [9:0] add_ln97_fu_981_p2;
wire   [4:0] add_ln120_fu_1020_p2;
wire   [4:0] mul_ln120_fu_1030_p0;
wire   [4:0] mul_ln120_1_fu_1040_p0;
wire   [9:0] add_ln120_10_fu_1062_p2;
wire   [9:0] add_ln120_11_fu_1073_p2;
wire   [9:0] add_ln120_12_fu_1082_p2;
wire   [9:0] zext_ln120_6_fu_1091_p1;
wire   [9:0] add_ln120_13_fu_1095_p2;
wire   [9:0] add_ln120_14_fu_1106_p2;
wire   [4:0] add_ln120_1_fu_1127_p2;
wire   [9:0] zext_ln120_11_fu_1133_p1;
wire   [31:0] add_ln120_6_fu_1186_p2;
wire   [31:0] add_ln120_7_fu_1192_p2;
wire   [31:0] add_ln120_5_fu_1181_p2;
wire   [31:0] add_ln120_4_fu_1203_p2;
wire  signed [31:0] mul_ln120_2_fu_1223_p0;
wire   [64:0] sub_ln120_fu_1243_p2;
wire   [28:0] tmp_13_fu_1248_p4;
wire  signed [31:0] sext_ln120_1_fu_1258_p1;
wire  signed [31:0] sext_ln120_2_fu_1262_p1;
wire   [31:0] select_ln120_fu_1265_p3;
wire   [31:0] sub_ln120_1_fu_1272_p2;
wire   [9:0] zext_ln128_fu_1316_p1;
wire   [9:0] add_ln128_fu_1320_p2;
wire   [9:0] zext_ln134_fu_1373_p1;
wire   [9:0] add_ln134_fu_1377_p2;
wire   [63:0] p_Val2_s_fu_1388_p1;
wire   [51:0] tmp_V_1_fu_1409_p1;
wire   [53:0] mantissa_V_fu_1413_p4;
wire   [10:0] tmp_V_fu_1399_p4;
wire   [11:0] zext_ln502_fu_1427_p1;
wire   [11:0] add_ln502_fu_1431_p2;
wire   [10:0] sub_ln1311_fu_1445_p2;
wire   [0:0] isNeg_fu_1437_p3;
wire  signed [11:0] sext_ln1311_fu_1451_p1;
wire   [11:0] ush_fu_1455_p3;
wire  signed [31:0] sext_ln1311_1_fu_1463_p1;
wire   [53:0] zext_ln1285_fu_1471_p1;
wire   [136:0] zext_ln682_fu_1423_p1;
wire   [136:0] zext_ln1287_fu_1467_p1;
wire   [53:0] r_V_fu_1475_p2;
wire   [0:0] tmp_17_fu_1487_p3;
wire   [136:0] r_V_1_fu_1481_p2;
wire   [31:0] zext_ln662_fu_1495_p1;
wire   [31:0] tmp_s_fu_1499_p4;
wire   [31:0] p_Val2_5_fu_1509_p3;
wire   [0:0] p_Result_s_fu_1391_p3;
wire   [31:0] result_V_1_fu_1517_p2;
wire   [9:0] add_ln144_fu_1549_p2;
wire   [4:0] mul_ln144_fu_1564_p0;
wire   [10:0] mul_ln144_fu_1564_p2;
wire   [9:0] zext_ln147_fu_1609_p1;
wire   [9:0] add_ln147_fu_1613_p2;
wire   [9:0] zext_ln147_2_fu_1624_p1;
wire   [9:0] add_ln147_1_fu_1627_p2;
wire   [32:0] tmp_3_fu_1647_p3;
wire   [10:0] trunc_ln152_fu_1660_p1;
wire   [11:0] sext_ln152_cast_fu_1664_p3;
wire   [11:0] or_ln153_fu_1672_p2;
wire  signed [10:0] grp_fu_1796_p3;
wire   [5:0] grp_fu_1745_p1;
wire   [5:0] grp_fu_1745_p2;
wire   [5:0] trunc_ln174_fu_1751_p1;
wire   [0:0] icmp_ln174_fu_1755_p2;
wire   [31:0] im_row_fu_1761_p2;
wire   [31:0] select_ln174_fu_1773_p3;
wire   [5:0] grp_fu_1796_p0;
wire  signed [10:0] grp_fu_1796_p1;
wire   [10:0] grp_fu_1796_p2;
reg    grp_fu_1745_ap_start;
wire    grp_fu_1745_ap_done;
reg   [75:0] ap_NS_fsm;
wire   [9:0] mul_ln120_1_fu_1040_p00;
wire   [9:0] mul_ln120_fu_1030_p00;
wire   [10:0] mul_ln144_fu_1564_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 76'd1;
end

I2B_Compressed_Imbkb #(
    .DataWidth( 8 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
Compressed_Image_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Compressed_Image_0_address0),
    .ce0(Compressed_Image_0_ce0),
    .q0(Compressed_Image_0_q0)
);

I2B_Compressed_Imcud #(
    .DataWidth( 2 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
Compressed_Image_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Compressed_Image_1_address0),
    .ce0(Compressed_Image_1_ce0),
    .q0(Compressed_Image_1_q0)
);

I2B_dmul_64ns_64ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
I2B_dmul_64ns_64ndEe_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_2141),
    .din1(64'd4602678819172646912),
    .ce(1'b1),
    .dout(grp_fu_743_p2)
);

I2B_sitodp_32ns_6eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
I2B_sitodp_32ns_6eOg_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(img_load_3_reg_2136),
    .ce(1'b1),
    .dout(grp_fu_748_p1)
);

I2B_srem_32ns_6nsfYi #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
I2B_srem_32ns_6nsfYi_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1745_ap_start),
    .done(grp_fu_1745_ap_done),
    .din0(im_col_1_fu_186),
    .din1(grp_fu_1745_p1),
    .ce(1'b1),
    .dout(grp_fu_1745_p2)
);

I2B_mac_muladd_6ng8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
I2B_mac_muladd_6ng8j_U4(
    .din0(grp_fu_1796_p0),
    .din1(grp_fu_1796_p1),
    .din2(grp_fu_1796_p2),
    .dout(grp_fu_1796_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_782_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        a_0_reg_537 <= 5'd0;
    end else if (((icmp_ln95_fu_908_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        a_0_reg_537 <= a_reg_1844;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        b1_0_reg_560 <= b_1_reg_1875;
    end else if (((icmp_ln94_fu_857_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        b1_0_reg_560 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (((icmp_ln147_fu_1638_p2 == 1'd0) & (icmp_ln144_1_reg_2206 == 1'd0)) | ((icmp_ln147_fu_1638_p2 == 1'd0) & (icmp_ln144_reg_2202 == 1'd0))))) begin
        count_1_fu_178 <= count_fu_1683_p2;
    end else if (((icmp_ln132_fu_1344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        count_1_fu_178 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_857_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        d_0_reg_571 <= 5'd0;
    end else if (((icmp_ln115_fu_1046_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        d_0_reg_571 <= m_reg_1911;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        e_0_reg_606 <= n_reg_1933;
    end else if (((icmp_ln114_fu_1008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        e_0_reg_606 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_794_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_503 <= i_reg_1813;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_503 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_1344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        i_cmprs_0_reg_686 <= 5'd0;
    end else if (((icmp_ln142_fu_1585_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        i_cmprs_0_reg_686 <= i_cmprs_reg_2164;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_fu_1008_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_inv_0_reg_618 <= 5'd0;
    end else if (((icmp_ln127_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        i_inv_0_reg_618 <= i_inv_reg_2068;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln126_fu_1292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        i_scale_0_reg_652 <= 5'd0;
    end else if (((icmp_ln133_fu_1361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        i_scale_0_reg_652 <= i_scale_reg_2099;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        im_col_1_fu_186 <= im_col_fu_1781_p2;
    end else if (((icmp_ln141_fu_1537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        im_col_1_fu_186 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        im_row_1_fu_190 <= im_row_2_fu_1766_p3;
    end else if (((icmp_ln141_fu_1537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        im_row_1_fu_190 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_526 <= j_reg_1821;
    end else if (((icmp_ln84_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_526 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        j_cmprs_0_reg_709 <= j_cmprs_reg_2196;
    end else if (((icmp_ln141_fu_1537_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        j_cmprs_0_reg_709 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_inv_0_reg_641 <= j_inv_reg_2076;
    end else if (((icmp_ln126_fu_1292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        j_inv_0_reg_641 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        j_scale_0_reg_675 <= j_scale_reg_2121;
    end else if (((icmp_ln132_fu_1344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        j_scale_0_reg_675 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state38) & (((icmp_ln147_fu_1638_p2 == 1'd1) & (icmp_ln144_1_reg_2206 == 1'd0)) | ((icmp_ln147_fu_1638_p2 == 1'd1) & (icmp_ln144_reg_2202 == 1'd0)))) | ((icmp_ln144_1_fu_1603_p2 == 1'd1) & (icmp_ln144_reg_2202 == 1'd1) & (1'b1 == ap_CS_fsm_state37)))) begin
        num_1_fu_182 <= grp_fu_760_p2;
    end else if ((((1'b1 == ap_CS_fsm_state38) & (((icmp_ln147_fu_1638_p2 == 1'd0) & (icmp_ln144_1_reg_2206 == 1'd0)) | ((icmp_ln147_fu_1638_p2 == 1'd0) & (icmp_ln144_reg_2202 == 1'd0)))) | ((icmp_ln132_fu_1344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)))) begin
        num_1_fu_182 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln170_fu_1716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        p_0_reg_721 <= p_reg_2226;
    end else if (((icmp_ln141_fu_1537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        p_0_reg_721 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_1344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        phi_mul11_reg_697 <= 10'd0;
    end else if (((icmp_ln142_fu_1585_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        phi_mul11_reg_697 <= add_ln141_reg_2156;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_782_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul1_reg_548 <= 10'd0;
    end else if (((icmp_ln95_fu_908_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul1_reg_548 <= add_ln94_reg_1836;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_857_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul3_reg_582 <= 10'd0;
    end else if (((icmp_ln115_fu_1046_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_mul3_reg_582 <= add_ln114_1_reg_1903;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_857_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul5_reg_594 <= 10'd0;
    end else if (((icmp_ln115_fu_1046_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_mul5_reg_594 <= add_ln114_reg_1898;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_fu_1008_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        phi_mul7_reg_629 <= 10'd0;
    end else if (((icmp_ln127_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        phi_mul7_reg_629 <= add_ln126_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln126_fu_1292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        phi_mul9_reg_663 <= 10'd0;
    end else if (((icmp_ln133_fu_1361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        phi_mul9_reg_663 <= add_ln132_reg_2091;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_794_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul_reg_514 <= add_ln84_reg_1805;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_514 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_771 <= zeropad_q1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_771 <= zeropad_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        z_0_reg_732 <= z_reg_2254;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        z_0_reg_732 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        Decomp_count_reg_2246 <= Compressed_Image_1_q0;
        zext_ln168_1_reg_2241[7 : 0] <= zext_ln168_1_fu_1712_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        a_reg_1844 <= a_fu_863_p2;
        add_ln94_reg_1836 <= add_ln94_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln105_fu_926_p2 == 1'd0) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln102_fu_920_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln108_3_reg_1893 <= add_ln108_3_fu_956_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln114_1_reg_1903 <= add_ln114_1_fu_1002_p2;
        add_ln114_reg_1898 <= add_ln114_fu_996_p2;
        m_reg_1911 <= m_fu_1014_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln120_15_reg_1969 <= add_ln120_15_fu_1116_p2;
        add_ln120_16_reg_1974 <= add_ln120_16_fu_1121_p2;
        add_ln120_17_reg_1979 <= add_ln120_17_fu_1137_p2;
        add_ln120_18_reg_1984 <= add_ln120_18_fu_1143_p2;
        add_ln120_19_reg_1989 <= add_ln120_19_fu_1148_p2;
        add_ln120_2_reg_1994 <= add_ln120_2_fu_1153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln120_3_reg_2009 <= add_ln120_3_fu_1167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln120_8_reg_2034 <= add_ln120_8_fu_1197_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln120_9_reg_2039 <= add_ln120_9_fu_1207_p2;
        tmp_12_reg_2044 <= add_ln120_9_fu_1207_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln126_reg_2060 <= add_ln126_fu_1286_p2;
        i_inv_reg_2068 <= i_inv_fu_1298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln132_reg_2091 <= add_ln132_fu_1338_p2;
        i_scale_reg_2099 <= i_scale_fu_1350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln141_reg_2156 <= add_ln141_fu_1531_p2;
        i_cmprs_reg_2164 <= i_cmprs_fu_1543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln84_reg_1805 <= add_ln84_fu_776_p2;
        i_reg_1813 <= i_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        b_1_reg_1875 <= b_1_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        icmp_ln102_reg_1880 <= icmp_ln102_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln102_fu_920_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        icmp_ln105_reg_1884 <= icmp_ln105_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2202 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        icmp_ln144_1_reg_2206 <= icmp_ln144_1_fu_1603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln142_fu_1585_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        icmp_ln144_reg_2202 <= icmp_ln144_fu_1597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_857_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        icmp_ln96_reg_1849 <= icmp_ln96_fu_869_p2;
        icmp_ln99_reg_1863 <= icmp_ln99_fu_886_p2;
        mul_ln108_reg_1867 <= mul_ln108_fu_902_p2;
        zeropad_addr_10_reg_1853 <= zext_ln94_1_fu_842_p1;
        zeropad_addr_11_reg_1858 <= zext_ln106_fu_881_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln141_fu_1537_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        img_addr_4_reg_2169 <= zext_ln144_fu_1555_p1;
        img_addr_5_reg_2174 <= zext_ln144_2_fu_1570_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        img_load_3_reg_2136 <= img_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        j_cmprs_reg_2196 <= j_cmprs_fu_1591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_inv_reg_2076 <= j_inv_fu_1310_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1821 <= j_fu_800_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j_scale_reg_2121 <= j_scale_fu_1367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_fu_1008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        mul_ln120_1_reg_1923 <= mul_ln120_1_fu_1040_p2;
        mul_ln120_reg_1916 <= mul_ln120_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln120_2_reg_2050[64 : 3] <= mul_ln120_2_fu_1223_p2[64 : 3];
        tmp_14_reg_2055 <= {{mul_ln120_2_fu_1223_p2[64:36]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        n_reg_1933 <= n_fu_1052_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        p_Val2_6_reg_2151 <= p_Val2_6_fu_1523_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        p_reg_2226 <= p_fu_1700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_reg_2141 <= grp_fu_748_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        x_assign_reg_2146 <= grp_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        z_reg_2254 <= z_fu_1721_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        zeropad_load_5_reg_2014 <= zeropad_q1;
        zeropad_load_6_reg_2029 <= zeropad_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_fu_1046_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        zext_ln120_2_reg_1938[4 : 0] <= zext_ln120_2_fu_1058_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln127_fu_1304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        zext_ln128_1_reg_2081[9 : 0] <= zext_ln128_1_fu_1326_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_fu_1361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        zext_ln134_1_reg_2126[9 : 0] <= zext_ln134_1_fu_1383_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_794_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        zext_ln86_1_reg_1826[9 : 0] <= zext_ln86_1_fu_816_p1[9 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        Compressed_Image_0_ce0 = 1'b1;
    end else begin
        Compressed_Image_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        Compressed_Image_1_ce0 = 1'b1;
    end else begin
        Compressed_Image_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln167_fu_1694_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln167_fu_1694_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        avg_ce0 = 1'b1;
    end else begin
        avg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        avg_we0 = 1'b1;
    end else begin
        avg_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        b_ce0 = 1'b1;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        b_we0 = 1'b1;
    end else begin
        b_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        comp_img_ce0 = 1'b1;
    end else begin
        comp_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        comp_img_ce1 = 1'b1;
    end else begin
        comp_img_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (((icmp_ln147_fu_1638_p2 == 1'd0) & (icmp_ln144_1_reg_2206 == 1'd0)) | ((icmp_ln147_fu_1638_p2 == 1'd0) & (icmp_ln144_reg_2202 == 1'd0))))) begin
        comp_img_we0 = 1'b1;
    end else begin
        comp_img_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (((icmp_ln147_fu_1638_p2 == 1'd0) & (icmp_ln144_1_reg_2206 == 1'd0)) | ((icmp_ln147_fu_1638_p2 == 1'd0) & (icmp_ln144_reg_2202 == 1'd0))))) begin
        comp_img_we1 = 1'b1;
    end else begin
        comp_img_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        decom_img_ce0 = 1'b1;
    end else begin
        decom_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln170_fu_1716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        decom_img_we0 = 1'b1;
    end else begin
        decom_img_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln170_fu_1716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_1745_ap_start = 1'b1;
    end else begin
        grp_fu_1745_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        img_address0 = zext_ln147_3_fu_1633_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        img_address0 = img_addr_4_reg_2169;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        img_address0 = zext_ln134_1_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        img_address0 = zext_ln128_1_fu_1326_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        img_address0 = zext_ln108_1_fu_947_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        img_address0 = zext_ln86_1_fu_816_p1;
    end else begin
        img_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        img_address1 = zext_ln147_1_fu_1619_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        img_address1 = img_addr_5_reg_2174;
    end else begin
        img_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        img_ce0 = 1'b1;
    end else begin
        img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        img_ce1 = 1'b1;
    end else begin
        img_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        inv_ce0 = 1'b1;
    end else begin
        inv_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        inv_we0 = 1'b1;
    end else begin
        inv_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        sca_ce0 = 1'b1;
    end else begin
        sca_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        sca_we0 = 1'b1;
    end else begin
        sca_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        zeropad_address0 = zext_ln120_14_fu_1177_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        zeropad_address0 = zext_ln120_12_fu_1163_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        zeropad_address0 = zext_ln120_8_fu_1111_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        zeropad_address0 = zext_ln120_4_fu_1077_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        zeropad_address0 = zext_ln120_3_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        zeropad_address0 = zext_ln108_3_fu_992_p1;
    end else if (((icmp_ln96_reg_1849 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        zeropad_address0 = zext_ln97_1_fu_987_p1;
    end else if (((icmp_ln99_reg_1863 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        zeropad_address0 = zext_ln100_1_fu_972_p1;
    end else if (((icmp_ln102_fu_920_p2 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        zeropad_address0 = zeropad_addr_10_reg_1853;
    end else if (((icmp_ln105_fu_926_p2 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln102_fu_920_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        zeropad_address0 = zeropad_addr_11_reg_1858;
    end else begin
        zeropad_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        zeropad_address1 = zext_ln120_13_fu_1173_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        zeropad_address1 = zext_ln120_9_fu_1159_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        zeropad_address1 = zext_ln120_7_fu_1101_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        zeropad_address1 = zext_ln120_5_fu_1086_p1;
    end else begin
        zeropad_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | ((icmp_ln96_reg_1849 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln99_reg_1863 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln102_fu_920_p2 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln105_fu_926_p2 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln102_fu_920_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        zeropad_ce0 = 1'b1;
    end else begin
        zeropad_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        zeropad_ce1 = 1'b1;
    end else begin
        zeropad_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        zeropad_d0 = img_q0;
    end else if ((((icmp_ln96_reg_1849 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln99_reg_1863 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln102_fu_920_p2 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln105_fu_926_p2 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln102_fu_920_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        zeropad_d0 = 32'd0;
    end else begin
        zeropad_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln105_reg_1884 == 1'd0) & (icmp_ln102_reg_1880 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln96_reg_1849 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln99_reg_1863 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln102_fu_920_p2 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln105_fu_926_p2 == 1'd1) & (icmp_ln95_fu_908_p2 == 1'd0) & (icmp_ln102_fu_920_p2 == 1'd0) & (icmp_ln99_reg_1863 == 1'd0) & (icmp_ln96_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        zeropad_we0 = 1'b1;
    end else begin
        zeropad_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln84_fu_782_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln85_fu_794_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln94_fu_857_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln95_fu_908_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln114_fu_1008_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln115_fu_1046_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln126_fu_1292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln127_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln132_fu_1344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln133_fu_1361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln141_fu_1537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln142_fu_1585_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state39 : begin
            if (((icmp_ln167_fu_1694_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((icmp_ln170_fu_1716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Compressed_Image_0_address0 = zext_ln168_fu_1706_p1;

assign Compressed_Image_1_address0 = zext_ln168_fu_1706_p1;

assign a_fu_863_p2 = (a_0_reg_537 + 5'd1);

assign add_ln100_fu_966_p2 = (phi_mul1_reg_548 + zext_ln100_fu_962_p1);

assign add_ln106_fu_875_p2 = (phi_mul1_reg_548 + 10'd26);

assign add_ln108_1_fu_932_p2 = ($signed(b1_0_reg_560) + $signed(5'd31));

assign add_ln108_2_fu_942_p2 = (mul_ln108_reg_1867 + zext_ln108_fu_938_p1);

assign add_ln108_3_fu_956_p2 = (phi_mul1_reg_548 + zext_ln108_2_fu_952_p1);

assign add_ln108_fu_892_p2 = ($signed(zext_ln94_fu_853_p1) + $signed(6'd63));

assign add_ln114_1_fu_1002_p2 = (phi_mul3_reg_582 + 10'd27);

assign add_ln114_fu_996_p2 = (phi_mul5_reg_594 + 10'd25);

assign add_ln120_10_fu_1062_p2 = (zext_ln120_2_fu_1058_p1 + phi_mul3_reg_582);

assign add_ln120_11_fu_1073_p2 = (zext_ln120_2_reg_1938 + mul_ln120_reg_1916);

assign add_ln120_12_fu_1082_p2 = (zext_ln120_2_reg_1938 + mul_ln120_1_reg_1923);

assign add_ln120_13_fu_1095_p2 = (zext_ln120_6_fu_1091_p1 + phi_mul3_reg_582);

assign add_ln120_14_fu_1106_p2 = (zext_ln120_6_fu_1091_p1 + mul_ln120_reg_1916);

assign add_ln120_15_fu_1116_p2 = (zext_ln120_6_fu_1091_p1 + mul_ln120_1_reg_1923);

assign add_ln120_16_fu_1121_p2 = (zext_ln120_6_fu_1091_p1 + phi_mul5_reg_594);

assign add_ln120_17_fu_1137_p2 = (zext_ln120_11_fu_1133_p1 + phi_mul3_reg_582);

assign add_ln120_18_fu_1143_p2 = (zext_ln120_11_fu_1133_p1 + mul_ln120_reg_1916);

assign add_ln120_19_fu_1148_p2 = (zext_ln120_11_fu_1133_p1 + mul_ln120_1_reg_1923);

assign add_ln120_1_fu_1127_p2 = (e_0_reg_606 + 5'd2);

assign add_ln120_2_fu_1153_p2 = (reg_771 + zeropad_q0);

assign add_ln120_3_fu_1167_p2 = (reg_771 + zeropad_q1);

assign add_ln120_4_fu_1203_p2 = (add_ln120_3_reg_2009 + add_ln120_2_reg_1994);

assign add_ln120_5_fu_1181_p2 = (reg_771 + zeropad_load_5_reg_2014);

assign add_ln120_6_fu_1186_p2 = (zeropad_q1 + zeropad_q0);

assign add_ln120_7_fu_1192_p2 = (add_ln120_6_fu_1186_p2 + zeropad_load_6_reg_2029);

assign add_ln120_8_fu_1197_p2 = (add_ln120_7_fu_1192_p2 + add_ln120_5_fu_1181_p2);

assign add_ln120_9_fu_1207_p2 = (add_ln120_8_reg_2034 + add_ln120_4_fu_1203_p2);

assign add_ln120_fu_1020_p2 = (d_0_reg_571 + 5'd2);

assign add_ln126_fu_1286_p2 = (phi_mul7_reg_629 + 10'd25);

assign add_ln128_fu_1320_p2 = (phi_mul7_reg_629 + zext_ln128_fu_1316_p1);

assign add_ln132_fu_1338_p2 = (phi_mul9_reg_663 + 10'd25);

assign add_ln134_fu_1377_p2 = (phi_mul9_reg_663 + zext_ln134_fu_1373_p1);

assign add_ln141_fu_1531_p2 = (phi_mul11_reg_697 + 10'd25);

assign add_ln144_fu_1549_p2 = (phi_mul11_reg_697 + 10'd24);

assign add_ln147_1_fu_1627_p2 = (phi_mul11_reg_697 + zext_ln147_2_fu_1624_p1);

assign add_ln147_fu_1613_p2 = (phi_mul11_reg_697 + zext_ln147_fu_1609_p1);

assign add_ln502_fu_1431_p2 = ($signed(12'd3073) + $signed(zext_ln502_fu_1427_p1));

assign add_ln84_fu_776_p2 = (phi_mul_reg_514 + 10'd25);

assign add_ln86_fu_810_p2 = (phi_mul_reg_514 + zext_ln86_fu_806_p1);

assign add_ln94_fu_847_p2 = (phi_mul1_reg_548 + 10'd27);

assign add_ln97_fu_981_p2 = (phi_mul1_reg_548 + zext_ln97_fu_977_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign avg_address0 = zext_ln120_10_fu_1239_p1;

assign avg_d0 = ((tmp_12_reg_2044[0:0] === 1'b1) ? sub_ln120_1_fu_1272_p2 : sext_ln120_2_fu_1262_p1);

assign b_1_fu_914_p2 = (b1_0_reg_560 + 5'd1);

assign b_address0 = zext_ln86_1_reg_1826;

assign b_d0 = icmp_ln86_fu_831_p2;

assign comp_img_address0 = sext_ln152_fu_1655_p1;

assign comp_img_address1 = zext_ln153_fu_1678_p1;

assign comp_img_d0 = img_q1;

assign comp_img_d1 = num_1_fu_182;

assign count_fu_1683_p2 = (32'd1 + count_1_fu_178);

assign decom_img_address0 = sext_ln171_fu_1741_p1;

assign decom_img_d0 = zext_ln168_1_reg_2241;

assign grp_fu_1745_p1 = 32'd24;

assign grp_fu_1796_p0 = 11'd25;

assign grp_fu_1796_p1 = im_row_1_fu_190[10:0];

assign grp_fu_1796_p2 = im_col_1_fu_186[10:0];

assign grp_fu_760_p2 = (num_1_fu_182 + 32'd1);

assign i_cmprs_fu_1543_p2 = (i_cmprs_0_reg_686 + 5'd1);

assign i_fu_788_p2 = (i_0_reg_503 + 5'd1);

assign i_inv_fu_1298_p2 = (i_inv_0_reg_618 + 5'd1);

assign i_scale_fu_1350_p2 = (i_scale_0_reg_652 + 5'd1);

assign icmp_ln102_fu_920_p2 = ((b1_0_reg_560 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_926_p2 = ((b1_0_reg_560 == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_1008_p2 = ((d_0_reg_571 == 5'd27) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_1046_p2 = ((e_0_reg_606 == 5'd27) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_1292_p2 = ((i_inv_0_reg_618 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln127_fu_1304_p2 = ((j_inv_0_reg_641 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_1344_p2 = ((i_scale_0_reg_652 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln133_fu_1361_p2 = ((j_scale_0_reg_675 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_1537_p2 = ((i_cmprs_0_reg_686 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln142_fu_1585_p2 = ((j_cmprs_0_reg_709 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_1603_p2 = ((img_q0 == img_q1) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_1597_p2 = ((j_cmprs_0_reg_709 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln147_fu_1638_p2 = ((img_q1 == img_q0) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_1694_p2 = ((p_0_reg_721 == 10'd579) ? 1'b1 : 1'b0);

assign icmp_ln170_fu_1716_p2 = ((z_0_reg_732 == Decomp_count_reg_2246) ? 1'b1 : 1'b0);

assign icmp_ln174_fu_1755_p2 = ((trunc_ln174_fu_1751_p1 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_782_p2 = ((i_0_reg_503 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_794_p2 = ((j_0_reg_526 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_831_p2 = (($signed(tmp_9_fu_821_p4) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_857_p2 = ((a_0_reg_537 == 5'd27) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_908_p2 = ((b1_0_reg_560 == 5'd27) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_869_p2 = ((a_0_reg_537 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_886_p2 = ((a_0_reg_537 == 5'd26) ? 1'b1 : 1'b0);

assign im_col_fu_1781_p2 = (select_ln174_fu_1773_p3 + im_col_1_fu_186);

assign im_row_2_fu_1766_p3 = ((icmp_ln174_fu_1755_p2[0:0] === 1'b1) ? im_row_fu_1761_p2 : im_row_1_fu_190);

assign im_row_fu_1761_p2 = (32'd1 + im_row_1_fu_190);

assign inv_address0 = zext_ln128_1_reg_2081;

assign inv_d0 = (32'd255 - img_q0);

assign isNeg_fu_1437_p3 = add_ln502_fu_1431_p2[32'd11];

assign j_cmprs_fu_1591_p2 = (j_cmprs_0_reg_709 + 5'd1);

assign j_fu_800_p2 = (j_0_reg_526 + 5'd1);

assign j_inv_fu_1310_p2 = (j_inv_0_reg_641 + 5'd1);

assign j_scale_fu_1367_p2 = (j_scale_0_reg_675 + 5'd1);

assign m_fu_1014_p2 = (d_0_reg_571 + 5'd1);

assign mantissa_V_fu_1413_p4 = {{{{1'd1}, {tmp_V_1_fu_1409_p1}}}, {1'd0}};

assign mul_ln108_fu_902_p0 = add_ln108_fu_892_p2;

assign mul_ln108_fu_902_p2 = ($signed(mul_ln108_fu_902_p0) * $signed('h19));

assign mul_ln120_1_fu_1040_p0 = mul_ln120_1_fu_1040_p00;

assign mul_ln120_1_fu_1040_p00 = m_fu_1014_p2;

assign mul_ln120_1_fu_1040_p2 = (mul_ln120_1_fu_1040_p0 * $signed('h1B));

assign mul_ln120_2_fu_1223_p0 = add_ln120_9_reg_2039;

assign mul_ln120_2_fu_1223_p2 = ($signed(mul_ln120_2_fu_1223_p0) * $signed(65'h1C71C71C8));

assign mul_ln120_fu_1030_p0 = mul_ln120_fu_1030_p00;

assign mul_ln120_fu_1030_p00 = add_ln120_fu_1020_p2;

assign mul_ln120_fu_1030_p2 = (mul_ln120_fu_1030_p0 * $signed('h1B));

assign mul_ln144_fu_1564_p0 = mul_ln144_fu_1564_p00;

assign mul_ln144_fu_1564_p00 = i_cmprs_fu_1543_p2;

assign mul_ln144_fu_1564_p2 = (mul_ln144_fu_1564_p0 * $signed('h19));

assign n_fu_1052_p2 = (e_0_reg_606 + 5'd1);

assign or_ln153_fu_1672_p2 = (sext_ln152_cast_fu_1664_p3 | 12'd1);

assign p_Result_s_fu_1391_p3 = p_Val2_s_fu_1388_p1[32'd63];

assign p_Val2_5_fu_1509_p3 = ((isNeg_fu_1437_p3[0:0] === 1'b1) ? zext_ln662_fu_1495_p1 : tmp_s_fu_1499_p4);

assign p_Val2_6_fu_1523_p3 = ((p_Result_s_fu_1391_p3[0:0] === 1'b1) ? result_V_1_fu_1517_p2 : p_Val2_5_fu_1509_p3);

assign p_Val2_s_fu_1388_p1 = x_assign_reg_2146;

assign p_fu_1700_p2 = (p_0_reg_721 + 10'd1);

assign r_V_1_fu_1481_p2 = zext_ln682_fu_1423_p1 << zext_ln1287_fu_1467_p1;

assign r_V_fu_1475_p2 = mantissa_V_fu_1413_p4 >> zext_ln1285_fu_1471_p1;

assign result_V_1_fu_1517_p2 = (32'd0 - p_Val2_5_fu_1509_p3);

assign sca_address0 = zext_ln134_1_reg_2126;

assign sca_d0 = p_Val2_6_reg_2151;

assign select_ln120_fu_1265_p3 = ((tmp_12_reg_2044[0:0] === 1'b1) ? sext_ln120_1_fu_1258_p1 : sext_ln120_2_fu_1262_p1);

assign select_ln174_fu_1773_p3 = ((icmp_ln174_fu_1755_p2[0:0] === 1'b1) ? 32'd4294967272 : 32'd1);

assign sext_ln120_1_fu_1258_p1 = $signed(tmp_13_fu_1248_p4);

assign sext_ln120_2_fu_1262_p1 = $signed(tmp_14_reg_2055);

assign sext_ln1311_1_fu_1463_p1 = $signed(ush_fu_1455_p3);

assign sext_ln1311_fu_1451_p1 = $signed(sub_ln1311_fu_1445_p2);

assign sext_ln152_cast_fu_1664_p3 = {{trunc_ln152_fu_1660_p1}, {1'd0}};

assign sext_ln152_fu_1655_p1 = $signed(tmp_3_fu_1647_p3);

assign sext_ln171_fu_1741_p1 = grp_fu_1796_p3;

assign sub_ln120_1_fu_1272_p2 = (32'd0 - select_ln120_fu_1265_p3);

assign sub_ln120_fu_1243_p2 = (65'd0 - mul_ln120_2_reg_2050);

assign sub_ln1311_fu_1445_p2 = (11'd1023 - tmp_V_fu_1399_p4);

assign tmp_13_fu_1248_p4 = {{sub_ln120_fu_1243_p2[64:36]}};

assign tmp_17_fu_1487_p3 = r_V_fu_1475_p2[32'd53];

assign tmp_3_fu_1647_p3 = {{count_1_fu_178}, {1'd0}};

assign tmp_9_fu_821_p4 = {{img_q0[31:7]}};

assign tmp_V_1_fu_1409_p1 = p_Val2_s_fu_1388_p1[51:0];

assign tmp_V_fu_1399_p4 = {{p_Val2_s_fu_1388_p1[62:52]}};

assign tmp_s_fu_1499_p4 = {{r_V_1_fu_1481_p2[84:53]}};

assign trunc_ln152_fu_1660_p1 = count_1_fu_178[10:0];

assign trunc_ln174_fu_1751_p1 = grp_fu_1745_p2[5:0];

assign ush_fu_1455_p3 = ((isNeg_fu_1437_p3[0:0] === 1'b1) ? sext_ln1311_fu_1451_p1 : add_ln502_fu_1431_p2);

assign z_fu_1721_p2 = (z_0_reg_732 + 2'd1);

assign zext_ln100_1_fu_972_p1 = add_ln100_fu_966_p2;

assign zext_ln100_fu_962_p1 = b1_0_reg_560;

assign zext_ln106_fu_881_p1 = add_ln106_fu_875_p2;

assign zext_ln108_1_fu_947_p1 = add_ln108_2_fu_942_p2;

assign zext_ln108_2_fu_952_p1 = b1_0_reg_560;

assign zext_ln108_3_fu_992_p1 = add_ln108_3_reg_1893;

assign zext_ln108_fu_938_p1 = add_ln108_1_fu_932_p2;

assign zext_ln120_10_fu_1239_p1 = add_ln120_16_reg_1974;

assign zext_ln120_11_fu_1133_p1 = add_ln120_1_fu_1127_p2;

assign zext_ln120_12_fu_1163_p1 = add_ln120_17_reg_1979;

assign zext_ln120_13_fu_1173_p1 = add_ln120_18_reg_1984;

assign zext_ln120_14_fu_1177_p1 = add_ln120_19_reg_1989;

assign zext_ln120_2_fu_1058_p1 = n_fu_1052_p2;

assign zext_ln120_3_fu_1068_p1 = add_ln120_10_fu_1062_p2;

assign zext_ln120_4_fu_1077_p1 = add_ln120_11_fu_1073_p2;

assign zext_ln120_5_fu_1086_p1 = add_ln120_12_fu_1082_p2;

assign zext_ln120_6_fu_1091_p1 = e_0_reg_606;

assign zext_ln120_7_fu_1101_p1 = add_ln120_13_fu_1095_p2;

assign zext_ln120_8_fu_1111_p1 = add_ln120_14_fu_1106_p2;

assign zext_ln120_9_fu_1159_p1 = add_ln120_15_reg_1969;

assign zext_ln1285_fu_1471_p1 = $unsigned(sext_ln1311_1_fu_1463_p1);

assign zext_ln1287_fu_1467_p1 = $unsigned(sext_ln1311_1_fu_1463_p1);

assign zext_ln128_1_fu_1326_p1 = add_ln128_fu_1320_p2;

assign zext_ln128_fu_1316_p1 = j_inv_0_reg_641;

assign zext_ln134_1_fu_1383_p1 = add_ln134_fu_1377_p2;

assign zext_ln134_fu_1373_p1 = j_scale_0_reg_675;

assign zext_ln144_2_fu_1570_p1 = mul_ln144_fu_1564_p2;

assign zext_ln144_fu_1555_p1 = add_ln144_fu_1549_p2;

assign zext_ln147_1_fu_1619_p1 = add_ln147_fu_1613_p2;

assign zext_ln147_2_fu_1624_p1 = j_cmprs_reg_2196;

assign zext_ln147_3_fu_1633_p1 = add_ln147_1_fu_1627_p2;

assign zext_ln147_fu_1609_p1 = j_cmprs_0_reg_709;

assign zext_ln153_fu_1678_p1 = or_ln153_fu_1672_p2;

assign zext_ln168_1_fu_1712_p1 = Compressed_Image_0_q0;

assign zext_ln168_fu_1706_p1 = p_0_reg_721;

assign zext_ln502_fu_1427_p1 = tmp_V_fu_1399_p4;

assign zext_ln662_fu_1495_p1 = tmp_17_fu_1487_p3;

assign zext_ln682_fu_1423_p1 = mantissa_V_fu_1413_p4;

assign zext_ln86_1_fu_816_p1 = add_ln86_fu_810_p2;

assign zext_ln86_fu_806_p1 = j_0_reg_526;

assign zext_ln94_1_fu_842_p1 = phi_mul1_reg_548;

assign zext_ln94_fu_853_p1 = a_0_reg_537;

assign zext_ln97_1_fu_987_p1 = add_ln97_fu_981_p2;

assign zext_ln97_fu_977_p1 = b1_0_reg_560;

always @ (posedge ap_clk) begin
    zext_ln86_1_reg_1826[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_1938[9:5] <= 5'b00000;
    mul_ln120_2_reg_2050[2:0] <= 3'b000;
    zext_ln128_1_reg_2081[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln134_1_reg_2126[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln168_1_reg_2241[31:8] <= 24'b000000000000000000000000;
end

endmodule //I2B
